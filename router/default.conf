upstream backend {
	server backend:8080;
}

server_tokens off;
charset utf-8;
# always redirect to https
server {
	listen 80 default_server;
	server_name _;
	return 301 https://$host$request_uri;
}
server {
	listen 443 ssl http2;
	server_name localhost;
	ssl_certificate				/certs/cert.pem;
	ssl_certificate_key		/certs/key.pem;

	ssl_session_timeout 1d;
	# about 40000 sessions
	ssl_session_cache shared:MozSSL:10m;
	ssl_session_tickets off;

	# intermediate configuration
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
	ssl_prefer_server_ciphers off;

	# OCSP stapling
	ssl_stapling on;
	ssl_stapling_verify on;

	default_type application/json; # If no content-type, assume JSON


	location / {
		proxy_pass	http://backend;
		proxy_pass_header Server;
  	proxy_redirect off;
  	proxy_set_header X-Scheme $scheme;
  	proxy_connect_timeout 10;
  	proxy_read_timeout 360;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	}
}
